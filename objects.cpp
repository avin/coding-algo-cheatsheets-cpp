#include <iostream>
#include <string>
#include <map>

// ---------------------------------------------------
// üìå –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –¥–æ—Å—Ç—É–ø –∫ –ø–æ–ª—è–º
// ---------------------------------------------------
struct Person {
    std::string name;
    int age;
};

void example_struct() {
    Person person{"–ò–≤–∞–Ω", 25};
    std::cout << person.name << std::endl;    // —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É
    std::cout << person.age << std::endl;     // —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É
}

// ---------------------------------------------------
// üìå –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ (—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏–≤—è–∑–∫–∏)
// ---------------------------------------------------
struct Person2 {
    std::string name;
    int height = 180;
};

void example_destructuring() {
    Person2 person{"–ò–≤–∞–Ω", 0};
    auto& [firstName, height] = person;
    std::cout << firstName << ", " << height << std::endl;
}

// ---------------------------------------------------
// üìå –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ std::map
// ---------------------------------------------------
void example_map_iteration() {
    std::map<std::string, int> m = { {"age", 25}, {"score", 100} };
    for (const auto& kv : m) {
        std::cout << kv.first << " = " << kv.second << std::endl;
    }
}

// ---------------------------------------------------
// üìå –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ / –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ std::map
// ---------------------------------------------------
void example_merge_maps() {
    std::map<std::string, int> defaults = { {"active", 1}, {"role", 0} };
    std::map<std::string, int> settings = { {"role", 1}, {"theme", 2} };
    std::map<std::string, int> merged = defaults;
    for (const auto& kv : settings) {
        merged[kv.first] = kv.second;
    }
}

// ---------------------------------------------------
// üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–∞ –≤ std::map
// ---------------------------------------------------
void example_has_key() {
    std::map<std::string, int> settings = { {"theme", 1} };
    bool hasTheme = settings.find("theme") != settings.end();
    bool hasHeight = settings.count("height") > 0;
}